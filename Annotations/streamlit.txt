Como o Streamlit Funciona?
O Streamlit transforma scripts Python em aplicativos web automaticamente. Tudo o que vocÃª faz em Python (carregar dados, criar grÃ¡ficos, adicionar controles) vira um app interativo.

Principais Componentes
FunÃ§Ã£o	            O que Faz?	                        Exemplo de CÃ³digo
st.title()	        Adiciona um tÃ­tulo ao app	        st.title("Meu Dashboard")
st.write()	        Exibe texto, DataFrames, grÃ¡ficos	st.write(df)
st.dataframe()	    Mostra um DataFrame interativo	    st.dataframe(df)
st.plotly_chart()	Plota grÃ¡ficos do Plotly	        st.plotly_chart(fig)
st.slider()	        Cria um slider para inputs	        st.slider("Idade", 0, 100)
st.button()	        Adiciona um botÃ£o clicÃ¡vel	        if st.button("Calcular"): ...

Exemplo PrÃ¡tico: Um App Simples com Streamlit
Vamos criar um app que:

Carrega um DataFrame.

Filtra dados com um slider.

Plota um grÃ¡fico interativo.

Passo 1: Instale o Streamlit
pip install streamlit

Passo 2: Crie um arquivo app.py
import streamlit as st
import pandas as pd
import plotly.express as px

# TÃ­tulo do app
st.title("ðŸ“Š AnÃ¡lise de Vendas")

# Carrega os dados
df = pd.DataFrame({
    "MÃªs": ["Jan", "Fev", "Mar", "Abr"],
    "Vendas": [100, 200, 150, 300]
})

# Slider para filtrar vendas mÃ­nimas
min_vendas = st.slider("Filtrar vendas mÃ­nimas:", 0, 300, 100)

# Filtra o DataFrame
df_filtrado = df[df["Vendas"] >= min_vendas]

# Mostra o DataFrame
st.write("ðŸ“Œ Dados filtrados:", df_filtrado)

# GrÃ¡fico interativo
fig = px.bar(df_filtrado, x="MÃªs", y="Vendas", title="Vendas por MÃªs")
st.plotly_chart(fig)

Passo 3: Execute o App
streamlit run app.py


Exemplo com cache e upload de arquivo:
@st.cache  # Armazena dados em cache para performance
def carregar_dados(arquivo):
    return pd.read_csv(arquivo)

arquivo = st.file_uploader("Envie seu CSV", type="csv")
if arquivo:
    df = carregar_dados(arquivo)
    st.dataframe(df)